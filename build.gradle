// Do a gradle build, followed by gradle fatJar

// From v2.18.8, this will build a smaller jar file

buildscript {  
    repositories {
        mavenCentral()       
    }
     
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"      
        //classpath 'com.github.rholder:gradle-one-jar:1.0.4'          
     
    }
}



plugins {
    id 'maven'
}


apply plugin: 'io.codearte.nexus-staging'

subprojects {
       

        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        artifacts {
            archives javadocJar, sourcesJar
        }
    }


allprojects {
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'java-library'

   
}

version = '2.18.8'



group = 'com.jpaulmorrison'

description = 'DrawFBP is a picture-drawing tool that allows users to create multi-level diagrams implementing the technology and methodology known as Flow-Based Programming (FBP). Diagrams are saved in DrawFBP XML format, and will generate JavaFBP or C#FBP networks.'

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

mainClassName = 'com.jpaulmorrison.graphics.DrawFBP'

nexusStaging {  
    username = ossrhUser
    password = ossrhPassword       
    
}

repositories {
    mavenCentral()
}


dependencies { 
	compile ('math.geom2d:javaGeom:0.11.1')
}




jar {
    manifest {
        attributes 'Implementation-Title': 'DrawFBP', 'Implementation-Version': version,
        "Class-Path": configurations.compile.collect { it.getName() }.join(' '),
        'Main-Class' : mainClassName
    }
}

if (JavaVersion.current().isJava8Compatible()) {   
        tasks.withType(Javadoc) {
            options.addBooleanOption('Xdoclint:none', true)
        }  
}

ext {
    snapshotPublicationRepository = "https://oss.sonatype.org/content/repositories/snapshots/"
    releasePublicationRepository = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"


mainClassName = 'com.jpaulmorrison.graphics.DrawFBP'
ossrhUser =  project.hasProperty('ossrhUser') ? project.property('ossrhUser') : ""
osshrPassword = project.hasProperty('osshrPassword') ? project.property('osshrPassword') : ""



}

// Used to generate initial maven-dir layout
task "create-dirs" { 
doLast {
description = "Create default maven directory structure" 
//} 
// {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar,sourcesJar
}

signing {
    sign configurations.archives
}

task fatJar(type: Jar) {

// Run after gradle build!
   
    manifest {
        attributes 'Implementation-Title': 'DrawFBP with javaGeom jar',  
        	'Implementation-Version': version,
        	"Class-Path": configurations.compile.collect { it.getName() }.join(' '),
        	'Main-Class': 'com.jpaulmorrison.graphics.DrawFBP'
    }
    
       
    //baseName = project.name + '-all'
    baseName = project.name
    from sourceSets.main.output
   
    dependsOn configurations.compile
    from {       
       configurations.compile.findAll {  it.name.endsWith('jar')  }.collect {   zipTree(it)  }      
    }
    exclude('math/geom2s/**')
    exclude('math/geom3d/**')
    exclude('math/geom2s/**')
    exclude('math/utils/**')
    exclude('math/package/html')
    exclude('com/seisw/util/geom/**')
   // with jar
}



task writeNewPom {
doLast {
    pom {
        project {
            groupId 'com.jpaulmorrison'
            artifactId 'drawfbp'

 
            version '2.18.8'
        
            inceptionYear '2016'
            licenses {
                license {
                    name 'GNU Lesser General Public License, Version 3.0'
                    url 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                }
            }          
        }
    }.writeTo("pom.xml")
    }
}

publishing {
  publications {
     mavenJava(MavenPublication) {

       
       groupId 'com.jpaulmorrison'        
      
       artifact 'drawfbp'
      // from components.java
     //  artifact sourcesJar
     //  artifact javadocJar
    }
 }
 

 
uploadArchives {



  repositories {
    mavenDeployer {
    
 
  
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: releasePublicationRepository) {
        authentication(userName: ossrhUser, password: ossrhPassword)
      }

      snapshotRepository(url: snapshotPublicationRepository) {
       authentication(userName: ossrhUser, password: ossrhPassword)
      }

      pom.project {
        name 'DrawFBP'
        description 'Diagramming Tool for Flow-Based Programming'
        groupId 'com.jpaulmorrison'
        packaging 'jar'
        // optionally artifactId can be defined here         
        url 'https://github.com/jpaulm/drawfbp'


        version '2.18.8'

        scm {
          connection 'scm:git:https://github.com/jpaulm.git'
          developerConnection 'scm:git:https://github.com/jpaulm.git'
          url 'https://github.com/jpaulm.git'
        }

        licenses {
          license {
            name 'GNU Lesser General Public License, Version 3.0'
            url 'https://www.gnu.org/licenses/lgpl-3.0.txt'
          }
        }

        developers {
          developer {
            id 'jpaulmorr'
            name 'John Paul Rodker Morrison (Software architect/developer)'
            email 'jpaulmorr@gmail.com'
          }
          developer {
            id 'bobcorrick'
            name 'Bob Corrick (Software architect/developer)'
            email 'bobcorrick@outlook.com'
          }
        }
   
                                                                         
         }                                                                             
 

      }
    }
  }
}