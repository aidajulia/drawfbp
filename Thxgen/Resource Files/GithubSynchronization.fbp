# @runtime noflo-browser
# @icon github-alt

INPORT=Token.IN:TOKEN
INPORT=RepoToPrepare.IN:PREPARE
INPORT=DoSync.IN:SYNC
INPORT=PullRepo.IN:PULL
OUTPORT=MergeOps.OUT:OPERATION
OUTPORT=UpdatedComponent.OUT:COMPONENT
OUTPORT=UpdatedGraph.OUT:GRAPH
OUTPORT=UpdatedSpec.OUT:SPEC
OUTPORT=BlobToEntry.PROJECT:PROJECT
OUTPORT=Loading.OUT:LOADING
OUTPORT=Ready.OUT:READY
OUTPORT=Errors.OUT:ERROR

# Preparation for sync: check local and remote situation
'repo' -> STRING SendRepoKey(strings/SendString) OUT -> KEY GetRepoToPrepare(objects/GetObjectKey)
RepoToPrepare(core/Split) OUT -> IN GetRepoToPrepare
RepoToPrepare OUT -> IN SendRepoKey
Token(core/Repeat) OUT -> TOKEN GetReference(github/GetReference)
GetRepoToPrepare OUT -> REPOSITORY GetReference
GetReference REFERENCE -> REFERENCE CheckSyncState(ui/CheckSyncState)
'project' -> STRING SendProjectKey(strings/SendString) OUT -> KEY GetProject(objects/GetObjectKey)
GetRepoToPrepare OBJECT -> IN GetProject OUT -> PROJECT CheckSyncState
GetRepoToPrepare OBJECT -> IN SendProjectKey
Token OUT -> TOKEN CheckSyncState
GetReference ERROR -> IN Errors(core/Merge)
CheckSyncState ERROR -> IN Errors

# Different synchronization states
CheckSyncState NOOP -> IN MergeOps(core/Merge)
CheckSyncState LOCAL -> IN MergeOps
CheckSyncState REMOTE -> IN MergeOps
CheckSyncState BOTH -> IN MergeOps

# Actual synchronization operation(s)
# First pull changes in
DoSync(core/Repeat) OUT -> IN PreparePulls(ui/PreparePulls)
Token OUT -> TOKEN GetBlob(github/GetBlob)
PreparePulls OUT -> OPERATION BlobToEntry(ui/BlobToEntry)
PreparePulls REPOSITORY -> REPOSITORY GetBlob
PreparePulls SHA -> SHA GetBlob
GetBlob OUT -> IN[0] CompletePulls(flow/Race) OUT -> BLOB BlobToEntry
GetBlob ERROR -> ERROR CompletePulls ERROR -> IN Errors
BlobToEntry COMPONENT -> IN UpdatedComponent(core/Merge)
BlobToEntry GRAPH -> IN UpdatedGraph(core/Merge)
BlobToEntry SPEC -> IN UpdatedSpec(core/Merge)
BlobToEntry PROJECT -> IN Ready(core/Repeat)
BlobToEntry ERROR -> IN Errors

# Then push local changes
DoSync OUT -> IN PreparePush(ui/PreparePush)
PreparePush OUT -> IN UpdateFromTree(ui/UpdateFromTree)
PreparePush BASETREE -> BASE CreateTree(github/CreateTree)
Token OUT -> TOKEN CreateTree
PreparePush TREE -> TREE CreateTree
PreparePush REPOSITORY -> REPOSITORY CreateTree
CreateTree OUT -> TREE UpdateFromTree
PreparePush REPOSITORY -> REPOSITORY UpdateFromTree
Token OUT -> TOKEN UpdateFromTree
'sha' -> STRING SendTreeSha(strings/SendString) OUT -> KEY GetTreeSha(objects/GetObjectKey)
CreateTree OUT -> IN GetTreeSha
CreateTree OUT -> IN SendTreeSha
GetTreeSha OUT -> TREE CreateCommit(github/CreateCommit)
Token OUT -> TOKEN CreateCommit
PreparePush MESSAGE -> MESSAGE CreateCommit
PreparePush PARENTCOMMITS -> PARENTS CreateCommit
PreparePush REPOSITORY -> REPOSITORY CreateCommit

CreateCommit OUT -> COMMIT UpdateReference(github/UpdateReference)
PreparePush REF -> REFERENCE UpdateReference
Token OUT -> TOKEN UpdateReference
PreparePush REPOSITORY -> REPOSITORY UpdateReference

UpdateFromTree COMPONENT -> IN UpdatedComponent
UpdateFromTree GRAPH -> IN UpdatedGraph
UpdateFromTree SPEC -> IN UpdatedSpec

UpdateFromTree ERROR -> IN Errors
CreateTree ERROR -> IN Errors
CreateCommit ERROR -> IN Errors
UpdateReference ERROR -> IN Errors

# Pull-only sync, no decision needed
'repo' -> STRING SendPullRepo(strings/SendString) OUT -> KEY GetPullRepo(objects/GetObjectKey)
PullRepo(core/Split) OUT -> IN Loading(core/Repeat)
PullRepo OUT -> IN GetPullRepo
PullRepo OUT -> IN SendPullRepo
Token(core/Repeat) OUT -> TOKEN GetPullReference(github/GetReference)
GetPullRepo OUT -> REPOSITORY GetPullReference
GetPullReference REFERENCE -> REFERENCE CheckPullState(ui/CheckSyncState)
'project' -> STRING SendPullProject(strings/SendString) OUT -> KEY GetPullProject(objects/GetObjectKey)
GetPullRepo OBJECT -> IN GetPullProject OUT -> PROJECT CheckPullState
GetPullRepo OBJECT -> IN SendPullProject
Token OUT -> TOKEN CheckPullState
GetPullReference ERROR -> IN Errors
CheckPullState REMOTE -> IN DoSync
CheckPullState ERROR -> IN Errors
